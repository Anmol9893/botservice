<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:local="clr-namespace:BotFileCreator"
                 xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">

    <Style x:Key="grid" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Thin"/>
    </Style>

    <Style x:Key="title" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Grid.ColumnSpan" Value="3"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Margin" Value="5,10,0,20"/>
    </Style>

    <Style x:Key="botNameTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}" >
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="250" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="5" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="MaxLength" Value="70"/>
        <Setter Property="FontWeight" Value="Thin"/>
    </Style>



    <Style x:Key="description" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="menu" TargetType="Menu">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style x:Key="menuItem" TargetType="MenuItem">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
    </Style>

    <Style x:Key="separator" TargetType="Rectangle">
        <Setter Property="Stroke" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.PageSideBarExpanderSeparatorBrushKey}}"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width"  Value="1" />
        <Setter Property="Margin" Value="2,0,0,50"/>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
    </Style>

    <Style x:Key="moduleTitle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="5,5,5,-5"/>
    </Style>

    <Style x:Key="copyButton" TargetType="Button">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
        </Style.Setters>
    </Style>

    <Style x:Key="encryptCheckBox" TargetType="CheckBox">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
        </Style.Setters>
    </Style>

    <Style x:Key="downBar" TargetType="Canvas">
        <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.BrandedUIBackgroundBrushKey}}"/>
        <Setter Property="Height" Value="60" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="downBarButton" TargetType="Button">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.SystemButtonTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.SystemButtonShadowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.StartPageButtonBorderBrushKey}}"/>
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="75" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style.Setters>
    </Style>

    <ControlTemplate x:Key="ButtonsTemplate" TargetType="Button">
        <Border x:Name="border" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1">
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowButtonHoverActiveBorderBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>